"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.onPreBuild = void 0;
// import { execSync } from "child_process";
const fs_1 = __importDefault(require("fs"));
const path_1 = require("path");
const onPreBuild = ({ netlifyConfig, }) => {
    var _a, _b, _c;
    const emailsDirectory = (_a = process.env.NETLIFY_EMAILS_DIRECTORY) !== null && _a !== void 0 ? _a : "./emails";
    if (((_c = (_b = netlifyConfig.functions) === null || _b === void 0 ? void 0 : _b.emails) === null || _c === void 0 ? void 0 : _c.included_files) !== undefined) {
        netlifyConfig.functions.emails.included_files.push(`${emailsDirectory}/**`);
    }
    else {
        netlifyConfig.functions.emails = Object.assign(Object.assign({}, netlifyConfig.functions.emails), { included_files: [`${emailsDirectory}/**`], external_node_modules: ["node-fetch@2"] });
    }
    //   const functionDependencies = ["node-fetch@2"];
    //   // Detect whether project is using NPM, Yarn or Pnpm
    //   let packageManager = "npm";
    //   if (fs.existsSync("yarn.lock")) {
    //     packageManager = "yarn";
    //   } else if (fs.existsSync("pnpm-lock.yaml")) {
    //     packageManager = "pnpm";
    //   }
    //   console.log("Installing email function dependencies");
    //   execSync(`${packageManager} install ${functionDependencies.join(" ")} -D`);
    //   console.log("Installed email function dependencies");
    const emailFunctionDirectory = (0, path_1.join)(".netlify", "functions-internal", "emails");
    fs_1.default.mkdirSync(emailFunctionDirectory, {
        recursive: true,
    });
    fs_1.default.copyFileSync((0, path_1.join)(__dirname, "../src", "handler", "index.ts"), (0, path_1.join)(emailFunctionDirectory, "index.ts"));
};
exports.onPreBuild = onPreBuild;
